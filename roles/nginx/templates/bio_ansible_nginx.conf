
# {{ nginx_server_name }} specific config

server {
  # which port to listen to
  listen 80 default_server;
  listen [::]:80 default_server;
  # name of domain name
  server_name {{ nginx_server_name }};
  # monitor who ever access your server and different other stats
  # log files path
  access_log /var/log/nginx/{{ nginx_server_name }}/access.log;
  error_log /var/log/nginx/{{ nginx_server_name }}/error.log;

  # CSP - this is a very permissive Content Security Policy (Shiny compatible)
  # You should make it more restrictive if possible: https://content-security-policy.com/
  add_header Content-Security-Policy "default-src https: * 'unsafe-eval' 'unsafe-inline'; font-src *; img-src * data:; script-src * 'unsafe-inline' 'unsafe-eval'; style-src * 'unsafe-inline';" always;

  # HSTS - enable this once SSL is enabled (eg, via:
  #   sudo apt update
  #   sudo apt install certbot python3-certbot-nginx
  #   sudo certbot --nginx --agree-tos --no-eff-email \
  #                --non-interactive --redirect \
  #                -d some.example.com -m admin@example.com \
  #                --post-hook "systemctl reload nginx.service"
  # add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload;' always;

  # handling requests to the root uri
  location / {
    root /var/www/html/{{ nginx_server_name }};
    index  index.html index.htm;
    try_files $uri $uri/ =404;
  }
  # no search engine indexing please
  location = /robots.txt {
    add_header  Content-Type  text/plain;
    return 200 "User-agent: *\nDisallow: /\n";
  }
  # requests to /~$USER/www path
  location ~ ^/~(.+?)(/.*)?$ {
    alias /home/$1/www$2;
    index  index.html index.htm;
    # autoindex will enable you to browser throught directory tree
    autoindex off;
  }
  # covering all bases
  # requests to /home/$USER/www path
  location ~ ^/home/(.+?)(/.*)?$ {
    alias /home/$1/www$2;
    index  index.html index.htm;
    # autoindex will enable you to browser throught directory tree
    autoindex off;
  }
}
