---

- name: download BigDataScript {{ version }}
  git:
    repo: https://github.com/l1ll1/BigDataScript.git
    dest: "{{ source_dir }}/BigDataScript-{{ version }}"
    version: "ffd90c71f85d4b0a580c484740cc1b8c5863e8e6"
    update: no

  tags: bds

- name: check that /usr/bin/java exists
  stat: 
    path: /usr/bin/java
  register: java_local
  ignore_errors: true

  tags: bds

- name: check oracle java exists
  stat:
    path: "{{ apps_dir }}/jdk1.{{ jdk_major }}.0_{{ jdk_minor }}"
  register: java_tar

  tags: bds

- name: build BigDataScript {{ version }} with java_tar
  shell: export JAVA_HOME={{ apps_dir }}/jdk1.{{ jdk_major }}.0_{{ jdk_minor }}; cd {{ source_dir }}/BigDataScript-{{ version }}/; ./scripts/install.sh
  args:
    creates: "{{ local_home }}/.bds/bds"
  when: java_tar is defined and java_tar.stat.isdir 

  tags: bds

- name: build BigDataScript {{ version }} with java_local
  shell: cd {{ source_dir }}/BigDataScript-{{ version }}/; ./scripts/install.sh
  args:
    creates: "{{ local_home }}/.bds/bds"
  when: ( java_local is defined and java_local.stat is defined ) and ( java_tar is not defined or java_tar.stat is not defined or java_tar.stat.isdir is not defined )

  tags: bds

- name: moving executable bds {{ version }} to apps directory
  shell: mv "{{ local_home }}/.bds" "{{ apps_dir }}/BigDataScript-{{ version }}"
  args:
    creates: "{{ apps_dir }}/BigDataScript-{{ version }}/bds"

  tags: bds

- name: copy bds.config file
  template:
    src: bds.config
    dest: "{{ apps_dir }}/BigDataScript-{{ version }}"

  tags: bds

- file:
    dest: "{{ modules_bio }}/BigDataScript"
    state: directory
    mode: 0755

  tags: bds

- name: BigDataScript {{ version }} lmod definition
  template:
    src: sw-module.lua.j2
    dest: "{{ modules_bio }}/BigDataScript/{{ version }}.lua"
    owner: "{{ main_guy }}"
    mode: 0644
  with_items:
    - dir: 'BigDataScript-{{ version }}'
      java: true
      skip_bin: true
      help_text: 'This module loads BigDataScript'

  tags: bds

- name: Setting register for BigDataScript {{ version }}
  stat:
    path: "{{ apps_dir }}/BigDataScript-{{ version }}/bds"
  register: b

  tags: bds

- name: Removing BigDataScript {{ version }} source directory
  file:
    dest: "{{ source_dir }}/BigDataScript-{{ version }}"
    state: absent
  when: "{{ del_src }} b.stat.exists"

  tags: bds
