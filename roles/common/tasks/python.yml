---
# From Ubuntu 20.04 onward we are assuming that the 'python' binary is a 3.x version
# Any legacy scripts will need to be updated to explicitly use /usr/bin/env python2 or
# run inside a conda environment with Python 2.x as the default 'python' binary

- name: update apt cache
  tags: ['apt', 'python']
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: apt-get python dependencies
  tags: ['apt', 'python']
  apt:
    name: "{{ item }}"
    state: present
    autoremove: yes
  with_items:
    - python-is-python3
    - python-dev-is-python3
    - python3
    - python3-pip
    - python3-virtualenv
    - python3-dev
    - python3-venv
    - ipython3
    - virtualenv
    - python-tk

- name: apt-get python dependencies (Ubuntu 20.04 specific)
  tags: ['apt', 'python']
  apt:
    name: "{{ item }}"
    state: present
    autoremove: yes
  with_items:
    - python-pip-whl
  when: ansible_distribution == 'Ubuntu' and ansible_lsb.major_release|int == 20

- name: apt-get python dependencies (Ubuntu 22.04 specific)
  tags: ['apt', 'python']
  apt:
    name: "{{ item }}"
    state: present
    autoremove: yes
  with_items:
    - python3-pip-whl
  when: ansible_distribution == 'Ubuntu' and ansible_lsb.major_release|int >= 22

- name: apt-get legacy python2 packages
  tags: ['apt', 'python']
  apt:
    name: "{{ item }}"
    state: present
    autoremove: yes
  with_items:
    - python-is-python3
    - python-dev-is-python3
    - python2
    - python2-dev
    - python-tk
